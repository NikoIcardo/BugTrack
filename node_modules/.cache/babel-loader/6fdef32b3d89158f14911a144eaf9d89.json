{"ast":null,"code":"import { GET_LOGS, SET_LOADING, LOGS_ERROR, ADD_LOG, DELETE_LOG, CLEAR_CURRENT, SET_CURRENT, UPDATE_LOG, SEARCH_LOGS } from '../actions/types';\nconst initialState = {\n  logs: null,\n  curent: null,\n  loading: false,\n  error: null\n}; //eslint-disable-next-line\n\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case GET_LOGS:\n      return { ...state,\n        logs: action.payload,\n        loading: false\n      };\n\n    case ADD_LOG:\n      return { ...state,\n        logs: [...state.logs, action.payload]\n      };\n\n    case DELETE_LOG:\n      return { ...state,\n        logs: state.logs.filter(log => log.id !== action.payload),\n        loading: false\n      };\n\n    case UPDATE_LOG:\n      return { ...state,\n        logs: state.logs.map(log => log.id === action.payload.id ? action.payload : log)\n      };\n\n    case SET_CURRENT:\n      return { ...state,\n        current: action.payload\n      };\n\n    case CLEAR_CURRENT:\n      return { ...state,\n        current: null\n      };\n\n    case SET_LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    case LOGS_ERROR:\n      console.log(action.payload);\n      return { ...state,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/Niko/Documents/GitHub/BugTrack/BugTrack/src/reducers/logReducer.js"],"names":["GET_LOGS","SET_LOADING","LOGS_ERROR","ADD_LOG","DELETE_LOG","CLEAR_CURRENT","SET_CURRENT","UPDATE_LOG","SEARCH_LOGS","initialState","logs","curent","loading","error","state","action","type","payload","filter","log","id","map","current","console"],"mappings":"AAAA,SACEA,QADF,EAEEC,WAFF,EAGEC,UAHF,EAIEC,OAJF,EAKEC,UALF,EAMEC,aANF,EAOEC,WAPF,EAQEC,UARF,EASEC,WATF,QAUO,kBAVP;AAYA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,IADa;AAEnBC,EAAAA,MAAM,EAAE,IAFW;AAGnBC,EAAAA,OAAO,EAAE,KAHU;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB,C,CAOA;;AACA,gBAAe,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKhB,QAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELJ,QAAAA,IAAI,EAAEK,MAAM,CAACE,OAFR;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKT,OAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELJ,QAAAA,IAAI,EAAE,CAAC,GAAGI,KAAK,CAACJ,IAAV,EAAgBK,MAAM,CAACE,OAAvB;AAFD,OAAP;;AAIF,SAAKb,UAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELJ,QAAAA,IAAI,EAAEI,KAAK,CAACJ,IAAN,CAAWQ,MAAX,CAAmBC,GAAD,IAASA,GAAG,CAACC,EAAJ,KAAWL,MAAM,CAACE,OAA7C,CAFD;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKL,UAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELJ,QAAAA,IAAI,EAAEI,KAAK,CAACJ,IAAN,CAAWW,GAAX,CAAgBF,GAAD,IACnBA,GAAG,CAACC,EAAJ,KAAWL,MAAM,CAACE,OAAP,CAAeG,EAA1B,GAA+BL,MAAM,CAACE,OAAtC,GAAgDE,GAD5C;AAFD,OAAP;;AAMF,SAAKb,WAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELQ,QAAAA,OAAO,EAAEP,MAAM,CAACE;AAFX,OAAP;;AAIF,SAAKZ,aAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELQ,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKrB,WAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELF,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAKF,SAAKV,UAAL;AACEqB,MAAAA,OAAO,CAACJ,GAAR,CAAYJ,MAAM,CAACE,OAAnB;AACA,aAAO,EACL,GAAGH,KADE;AAELD,QAAAA,KAAK,EAAEE,MAAM,CAACE;AAFT,OAAP;;AAIF;AACE,aAAOH,KAAP;AAhDJ;AAkDD,CAnDD","sourcesContent":["import {\r\n  GET_LOGS,\r\n  SET_LOADING,\r\n  LOGS_ERROR,\r\n  ADD_LOG,\r\n  DELETE_LOG,\r\n  CLEAR_CURRENT,\r\n  SET_CURRENT,\r\n  UPDATE_LOG,\r\n  SEARCH_LOGS,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  logs: null,\r\n  curent: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\n//eslint-disable-next-line\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_LOGS:\r\n      return {\r\n        ...state,\r\n        logs: action.payload,\r\n        loading: false,\r\n      };\r\n    case ADD_LOG:\r\n      return {\r\n        ...state,\r\n        logs: [...state.logs, action.payload],\r\n      };\r\n    case DELETE_LOG:\r\n      return {\r\n        ...state,\r\n        logs: state.logs.filter((log) => log.id !== action.payload),\r\n        loading: false,\r\n      };\r\n    case UPDATE_LOG:\r\n      return {\r\n        ...state,\r\n        logs: state.logs.map((log) =>\r\n          log.id === action.payload.id ? action.payload : log\r\n        ),\r\n      };\r\n    case SET_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: action.payload,\r\n      };\r\n    case CLEAR_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: null,\r\n      };\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case LOGS_ERROR:\r\n      console.log(action.payload);\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}