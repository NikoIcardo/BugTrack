{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Niko\\\\Documents\\\\GitHub\\\\BugTrack\\\\BugTrack\\\\src\\\\components\\\\techs\\\\TechSelectOptions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getTechs } from '../../actions/techActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TechSelectOptions = ({\n  techs,\n  getTechs\n}) => {\n  _s();\n\n  useEffect(() => {\n    getTechs(); //eslint-disable-next-line\n  }, []);\n  return techs !== null && techs.map(tech => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: tech.firstName + ' ' + tech.lastName,\n    children: tech.firstName + ' ' + tech.lastName\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 7\n  }, this));\n};\n\n_s(TechSelectOptions, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = TechSelectOptions;\nTechSelectOptions.propTypes = {\n  techs: PropTypes.array.isRequired,\n  getTechs: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  techs: state.tech.techs\n});\n\nexport default connect(mapStateToProps, {\n  getTechs\n})(TechSelectOptions);\n\nvar _c;\n\n$RefreshReg$(_c, \"TechSelectOptions\");","map":{"version":3,"sources":["C:/Users/Niko/Documents/GitHub/BugTrack/BugTrack/src/components/techs/TechSelectOptions.js"],"names":["React","useEffect","PropTypes","connect","getTechs","TechSelectOptions","techs","map","tech","firstName","lastName","propTypes","array","isRequired","func","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,2BAAzB;;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASF,EAAAA;AAAT,CAAD,KAAyB;AAAA;;AACjDH,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,QAAQ,GADM,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;AAIA,SACEE,KAAK,KAAK,IAAV,IACAA,KAAK,CAACC,GAAN,CAAWC,IAAD,iBACR;AAAQ,IAAA,KAAK,EAAEA,IAAI,CAACC,SAAL,GAAiB,GAAjB,GAAuBD,IAAI,CAACE,QAA3C;AAAA,cACGF,IAAI,CAACC,SAAL,GAAiB,GAAjB,GAAuBD,IAAI,CAACE;AAD/B;AAAA;AAAA;AAAA;AAAA,UADF,CAFF;AAQD,CAbD;;GAAML,iB;;KAAAA,iB;AAeNA,iBAAiB,CAACM,SAAlB,GAA8B;AAC5BL,EAAAA,KAAK,EAAEJ,SAAS,CAACU,KAAV,CAAgBC,UADK;AAE5BT,EAAAA,QAAQ,EAAEF,SAAS,CAACY,IAAV,CAAeD;AAFG,CAA9B;;AAKA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCV,EAAAA,KAAK,EAAEU,KAAK,CAACR,IAAN,CAAWF;AADgB,CAAZ,CAAxB;;AAIA,eAAeH,OAAO,CAACY,eAAD,EAAkB;AAAEX,EAAAA;AAAF,CAAlB,CAAP,CAAuCC,iBAAvC,CAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getTechs } from '../../actions/techActions';\r\n\r\nconst TechSelectOptions = ({ techs, getTechs }) => {\r\n  useEffect(() => {\r\n    getTechs();\r\n    //eslint-disable-next-line\r\n  }, []);\r\n  return (\r\n    techs !== null &&\r\n    techs.map((tech) => (\r\n      <option value={tech.firstName + ' ' + tech.lastName}>\r\n        {tech.firstName + ' ' + tech.lastName}\r\n      </option>\r\n    ))\r\n  );\r\n};\r\n\r\nTechSelectOptions.propTypes = {\r\n  techs: PropTypes.array.isRequired,\r\n  getTechs: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  techs: state.tech.techs,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getTechs })(TechSelectOptions);\r\n"]},"metadata":{},"sourceType":"module"}