{"ast":null,"code":"import { GET_TECHS, ADD_TECH, DELETE_TECH, SET_LOADING, TECH_ERROR } from './types'; // Get Techs from server\n\nexport const getTechs = () => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch('/techs');\n    const data = await res.json();\n    dispatch({\n      type: GET_TECHS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: TECH_ERROR,\n      payload: err.response.statusText\n    });\n  }\n}; // Add Tech\n\nexport const addTech = async (tech, dispatch) => {\n  try {\n    setLoading();\n    const res = await fetch('/techs', {\n      method: 'POST',\n      body: JSON.stringify(tech),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await res.json();\n    dispatch({\n      type: ADD_TECH,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: TECH_ERROR,\n      payload: err.response.statusText\n    });\n  }\n}; // Delete Tech\n\nexport const deleteTech = async (id, dispatch) => {\n  try {\n    setLoading();\n    const res = await fetch(`/techs/${id}`, {\n      method: 'DELETE'\n    });\n    dispatch({\n      type: ADD_TECH,\n      payload: id\n    });\n  } catch (err) {\n    dispatch({\n      type: TECH_ERROR,\n      payload: err.response.statusText\n    });\n  }\n}; // Set Loading\n\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING\n  };\n};","map":{"version":3,"sources":["C:/Users/Niko/Documents/GitHub/BugTrack/BugTrack/src/actions/techActions.js"],"names":["GET_TECHS","ADD_TECH","DELETE_TECH","SET_LOADING","TECH_ERROR","getTechs","dispatch","setLoading","res","fetch","data","json","type","payload","err","response","statusText","addTech","tech","method","body","JSON","stringify","headers","deleteTech","id"],"mappings":"AAAA,SACEA,SADF,EAEEC,QAFF,EAGEC,WAHF,EAIEC,WAJF,EAKEC,UALF,QAMO,SANP,C,CAQA;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAChD,MAAI;AACFC,IAAAA,UAAU;AAEV,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,QAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEAL,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEZ,SADC;AAEPa,MAAAA,OAAO,EAAEH;AAFF,KAAD,CAAR;AAID,GAVD,CAUE,OAAOI,GAAP,EAAY;AACZR,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAER,UADC;AAEPS,MAAAA,OAAO,EAAEC,GAAG,CAACC,QAAJ,CAAaC;AAFf,KAAD,CAAR;AAID;AACF,CAjBM,C,CAmBP;;AAEA,OAAO,MAAMC,OAAO,GAAG,OAAOC,IAAP,EAAaZ,QAAb,KAA0B;AAC/C,MAAI;AACFC,IAAAA,UAAU;AAEV,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,QAAD,EAAW;AAChCU,MAAAA,MAAM,EAAE,MADwB;AAEhCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAF0B;AAGhCK,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAHuB,KAAX,CAAvB;AAOA,UAAMb,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEAL,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEX,QADC;AAEPY,MAAAA,OAAO,EAAEH;AAFF,KAAD,CAAR;AAID,GAhBD,CAgBE,OAAOI,GAAP,EAAY;AACZR,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAER,UADC;AAEPS,MAAAA,OAAO,EAAEC,GAAG,CAACC,QAAJ,CAAaC;AAFf,KAAD,CAAR;AAID;AACF,CAvBM,C,CAyBP;;AACA,OAAO,MAAMQ,UAAU,GAAG,OAAOC,EAAP,EAAWnB,QAAX,KAAwB;AAChD,MAAI;AACFC,IAAAA,UAAU;AAEV,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,UAASgB,EAAG,EAAd,EAAiB;AACtCN,MAAAA,MAAM,EAAE;AAD8B,KAAjB,CAAvB;AAIAb,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEX,QADC;AAEPY,MAAAA,OAAO,EAAEY;AAFF,KAAD,CAAR;AAID,GAXD,CAWE,OAAOX,GAAP,EAAY;AACZR,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAER,UADC;AAEPS,MAAAA,OAAO,EAAEC,GAAG,CAACC,QAAJ,CAAaC;AAFf,KAAD,CAAR;AAID;AACF,CAlBM,C,CAoBP;;AACA,OAAO,MAAMT,UAAU,GAAG,MAAM;AAC9B,SAAO;AACLK,IAAAA,IAAI,EAAET;AADD,GAAP;AAGD,CAJM","sourcesContent":["import {\r\n  GET_TECHS,\r\n  ADD_TECH,\r\n  DELETE_TECH,\r\n  SET_LOADING,\r\n  TECH_ERROR,\r\n} from './types';\r\n\r\n// Get Techs from server\r\nexport const getTechs = () => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch('/techs');\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: GET_TECHS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: TECH_ERROR,\r\n      payload: err.response.statusText,\r\n    });\r\n  }\r\n};\r\n\r\n// Add Tech\r\n\r\nexport const addTech = async (tech, dispatch) => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch('/techs', {\r\n      method: 'POST',\r\n      body: JSON.stringify(tech),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: ADD_TECH,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: TECH_ERROR,\r\n      payload: err.response.statusText,\r\n    });\r\n  }\r\n};\r\n\r\n// Delete Tech\r\nexport const deleteTech = async (id, dispatch) => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch(`/techs/${id}`, {\r\n      method: 'DELETE',\r\n    });\r\n\r\n    dispatch({\r\n      type: ADD_TECH,\r\n      payload: id,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: TECH_ERROR,\r\n      payload: err.response.statusText,\r\n    });\r\n  }\r\n};\r\n\r\n// Set Loading\r\nexport const setLoading = () => {\r\n  return {\r\n    type: SET_LOADING,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}