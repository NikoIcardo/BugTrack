{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Niko\\\\Documents\\\\GitHub\\\\BugTrack\\\\BugTrack\\\\src\\\\components\\\\logs\\\\Logs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Logs = () => {\n  _s();\n\n  const [logs, setLogs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    getLogs(); //eslint-disable-next-line\n  }, []);\n\n  const getLogs = async () => {\n    setLoading(true);\n    const res = await fetch('/logs');\n    const data = await res.json();\n    setLogs(data);\n    setLoading(false);\n  };\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"collection-with-header\",\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"collection-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"center\",\n        children: \"System Logs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), !loading && logs.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"center\",\n      children: \" No logs....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this) : logs.map(log => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: log.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 27\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Logs, \"ZGhkABdExOczY9obwOnN8RHRH3E=\");\n\n_c = Logs;\nexport default Logs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Logs\");","map":{"version":3,"sources":["C:/Users/Niko/Documents/GitHub/BugTrack/BugTrack/src/components/logs/Logs.js"],"names":["React","useState","useEffect","Logs","logs","setLogs","loading","setLoading","getLogs","res","fetch","data","json","length","map","log","message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,OAAO,GADO,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMA,OAAO,GAAG,YAAY;AAC1BD,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAME,GAAG,GAAG,MAAMC,KAAK,CAAC,OAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEAP,IAAAA,OAAO,CAACM,IAAD,CAAP;AACAJ,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAPD;;AASA,MAAID,OAAJ,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAI,IAAA,SAAS,EAAC,wBAAd;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA,6BACE;AAAI,QAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,EAIG,CAACA,OAAD,IAAYF,IAAI,CAACS,MAAL,KAAgB,CAA5B,gBACC;AAAG,MAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,GAGCT,IAAI,CAACU,GAAL,CAAUC,GAAD,iBAAS;AAAA,gBAAKA,GAAG,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,YAAlB,CAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAlCD;;GAAMb,I;;KAAAA,I;AAoCN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Logs = () => {\r\n  const [logs, setLogs] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getLogs();\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  const getLogs = async () => {\r\n    setLoading(true);\r\n    const res = await fetch('/logs');\r\n    const data = await res.json();\r\n\r\n    setLogs(data);\r\n    setLoading(false);\r\n  };\r\n\r\n  if (loading) {\r\n    return <h4>Loading...</h4>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"collection-with-header\">\r\n      <li className=\"collection-header\">\r\n        <h4 className=\"center\">System Logs</h4>\r\n      </li>\r\n      {!loading && logs.length === 0 ? (\r\n        <p className=\"center\"> No logs....</p>\r\n      ) : (\r\n        logs.map((log) => <li>{log.message}</li>)\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Logs;\r\n"]},"metadata":{},"sourceType":"module"}